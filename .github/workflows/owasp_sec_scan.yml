name: OWASP Security Scan

on:
  push:
    branches: [ feature/owasp-sec-scan ]
  pull_request:
    branches: [ feature/owasp-sec-scan ]

jobs:
  zap_scan:
    name: OWASP ZAP API Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: Start application for testing
        run: |
          cd src/backend
          go mod download
          nohup go run main.go &
          sleep 10  # Give the application time to start

      - name: ZAP API Scan
        uses: zaproxy/action-api-scan@v0.5.0
        with:
          target: 'http://localhost:8080'
          fail_action: false  # Don't fail the build for medium/low risks
          issue_title: 'OWASP ZAP API Scan Report'
          token: ${{ secrets.GITHUB_TOKEN }}

  docker_scan:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Build backend image
        run: |
          cd src/backend
          docker build -t backend:test -f Dockerfile.prod .

      - name: Run Trivy vulnerability scanner - Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'backend:test'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true

      - name: Build nginx image
        run: |
          cd src/network
          docker build -t nginx:test -f Dockerfile.nginx .

      - name: Run Trivy vulnerability scanner - Nginx
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'nginx:test'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'
          ignore-unfixed: true

  gosec_scan:
    name: Go Security Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-exclude=G104 ./src/backend/...'  # Exclude error checking rule

  dependency_check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'WhoKnows'
          path: 'src/backend'
          format: 'HTML'
          out: 'reports'

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports
