name: Development SSL Deployment

on:
  push:
    branches: [ feature/enablehttps ]
  workflow_dispatch:

env:
  CR_PAT: ${{ secrets.CR_PAT }}
  DOCKER_GITHUB_USERNAME: ${{ secrets.DOCKER_GITHUB_USERNAME }}
  SSH_USER: ${{ secrets.DEV_SSH_USER }}
  SSH_HOST: ${{ secrets.DEV_SSH_HOST }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo ${{ env.CR_PAT }} | docker login ghcr.io -u ${{ env.DOCKER_GITHUB_USERNAME }} --password-stdin

      - name: Build and Push Docker Images
        run: |
          cd src
          docker compose -f docker-compose.dev.deploy.yml build
          docker compose -f docker-compose.dev.deploy.yml push

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/ssh_key
          chmod 600 ~/.ssh/ssh_key
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Dev Server
        run: |
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            sudo mkdir -p ~/app/frontend/templates &&
            sudo mkdir -p ~/app/network &&
            sudo mkdir -p ~/app/certbot/conf &&
            sudo mkdir -p ~/app/certbot/www &&
            sudo chown -R $USER:$USER ~/app
          "
          
          # Copy all necessary files
          scp -i ~/.ssh/ssh_key -r frontend/templates/* $SSH_USER@$SSH_HOST:~/app/frontend/templates/
          scp -i ~/.ssh/ssh_key src/docker-compose.dev.deploy.yml $SSH_USER@$SSH_HOST:~/app/docker-compose.yml
          scp -i ~/.ssh/ssh_key -r src/network/nginx-ssl.dev.conf $SSH_USER@$SSH_HOST:~/app/network/

      - name: Start Services
        run: |
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            cd ~/app &&
            docker compose down &&
            docker compose pull &&
            docker compose up -d &&
            docker compose ps
          "

      - name: Verify SSL Setup
        run: |
          echo "Waiting for services to start..."
          sleep 15
          
          echo "Checking HTTP redirect..."
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            curl -I http://localhost | grep -i 'location'
          "
          
          echo "Checking HTTPS connection..."
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            curl -k -I https://localhost
          "