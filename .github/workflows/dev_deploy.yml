name: Development SSL Deployment

on:
  push:
    branches: [ feature/enablehttps ]
  workflow_dispatch:

env:
  CR_PAT: ${{ secrets.CR_PAT }}
  DOCKER_GITHUB_USERNAME: ${{ secrets.DOCKER_GITHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo ${{ env.CR_PAT }} | docker login ghcr.io -u ${{ env.DOCKER_GITHUB_USERNAME }} --password-stdin

      - name: Build and Push Docker Images
        working-directory: ./src
        run: |
          docker compose -f docker-compose.dev.deploy.yml build
          docker compose -f docker-compose.dev.deploy.yml push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.DEV_SSH_USER }}
      SSH_HOST: ${{ secrets.DEV_SSH_HOST }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v3

      - name: Add SSH key to runner
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/ssh_key
          chmod 600 ~/.ssh/ssh_key
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer files to server
        run: |
          # Create necessary directories
          ssh -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST '
            sudo mkdir -p ~/app/frontend/templates ~/app/network ~/app/certbot/conf ~/app/certbot/www ~/app/internal/db && \
            sudo chown -R $USER:$USER ~/app && \
            rm -f ~/app/docker-compose.yml
          '
          
          # Transfer files
          scp -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no src/docker-compose.dev.deploy.yml $SSH_USER@$SSH_HOST:~/app/docker-compose.yml
          scp -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no src/backend/internal/db/schema.sql $SSH_USER@$SSH_HOST:~/app/internal/db/
          scp -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no src/frontend/templates/* $SSH_USER@$SSH_HOST:~/app/frontend/templates/
          scp -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no src/network/nginx-ssl.dev.conf $SSH_USER@$SSH_HOST:~/app/network/
          
          # Verify files exist
          ssh -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST '
            echo "Checking transferred files:" && \
            ls -la ~/app/docker-compose.yml ~/app/internal/db/schema.sql ~/app/frontend/templates/ ~/app/network/
          '
      
      - name: Deploy to server
        run: |
          ssh -i ~/.ssh/ssh_key -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
            cd ~/app && \
            docker compose pull && \
            docker compose up -d
          "

      - name: Verify SSL Setup
        run: |
          echo "Waiting for services to start..."
          sleep 15
          
          echo "Checking HTTP redirect..."
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            curl -I http://localhost | grep -i 'location'
          "
          
          echo "Checking HTTPS connection..."
          ssh -i ~/.ssh/ssh_key $SSH_USER@$SSH_HOST "
            curl -k https://localhost
          "