events {}

http {
    include /etc/nginx/mime.types;

    # HTTP server (port 80) - Redirect all traffic to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name monkbusiness.dk;

        # Important: Allow ACME challenge requests
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server (port 443)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name monkbusiness.dk;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/monkbusiness.dk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/monkbusiness.dk/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;

        # Static files
        location /static/ {
            alias /app/frontend/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://whoknows_go:8080/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Prometheus UI (port 9090)
        location /graph {
            proxy_pass http://prometheus:9090/graph;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1 {
            proxy_pass http://prometheus:9090/api/v1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static {
            proxy_pass http://prometheus:9090/static;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana reverse proxy
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy to Go backend
        location / {
            proxy_pass http://whoknows_go:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
